@page "/"
@using System.Text.Json
@inject HttpClient HttpClient

<PageTitle>Home</PageTitle>

<div class="title">
    <h1>2024</h1>
</div>


<div class="calendar">
    <!-- Weekdays -->
    <div class="weekday">Sun</div>
    <div class="weekday">Mon</div>
    <div class="weekday">Tue</div>
    <div class="weekday">Wed</div>
    <div class="weekday">Thu</div>
    <div class="weekday">Fri</div>
    <div class="weekday">Sat</div>

    <!-- Days 1 to 24 -->
    @for (int day = 1; day <= 24; day++)
    {
        string dayClass = "day";

        // 土曜日、日曜日の場合のクラス追加
        if (day % 7 == 1) // 1, 8, 15, 22 → 日曜日 (sunday)
        {
            dayClass += " sunday";
        }
        else if (day % 7 == 0) // 7, 14, 21 → 土曜日 (saturday)
        {
            dayClass += " saturday";
        }

        <div class="@dayClass">
            <span>@day</span>
            <div class="calendar-content @(articles.ContainsKey(day) ? "has-post" : "")">
                @if (articles.ContainsKey(day))
                {
                    var article = articles[day];
                    <b>
                        @{
                            var titleContent = (article.Status == "Publish")
                            ? (MarkupString)$"<a href=\"./post/{day}\">{article.Title}</a>"
                            : (MarkupString)article.Title;
                        }
                        @titleContent
                    </b>
                    <i>by <a href="https://github.com/@article.Author" target="_blank">@@@article.Author</a></i>
                }
                else
                {
                    <a class="how-to-contribute" href="https://github.com/igjp-sample/AdventCalendar/blob/main/how_to_contribute_article.md" target="_blank">+</a>
                }
            </div>
        </div>

    }

    <!-- Days 25 to 28 (Greyed out) -->
    <div class="day greyed-out xmas"><span>25</span></div>
    <div class="day greyed-out"><span>26</span></div>
    <div class="day greyed-out"><span>27</span></div>
    <div class="day greyed-out"><span>28</span></div>
</div>

@code {

    private Dictionary<int, Article> articles = new Dictionary<int, Article>();

    protected override async Task OnInitializedAsync()
    {

        var client = HttpClient;
        client.DefaultRequestHeaders.UserAgent.ParseAdd("request");

        var url = "https://api.github.com/repos/igjp-sample/AdventCalendar/contents/content";
        var contents = await client.GetFromJsonAsync<List<GitHubContent>>(url);
        if (contents != null)
        {
            foreach (var content in contents)
            {
                if (content.Name != "template.md" && !string.IsNullOrEmpty(content.download_url))
                {
                    var fileContent = await client.GetStringAsync(content.download_url);
                    // Markdown の2行目がタイトル
                    var lines = fileContent.Split('\n');
                    string title = "タイトル未設定";
                    if (lines.Length > 1)
                    {
                        var getTitle = lines[1].Trim();
                        if (getTitle.StartsWith("Title: "))
                        {
                            title = getTitle.Substring("Title: ".Length).Trim();
                        }
                    }

                    // Markdown の3行目が公開ステータス
                    string status = "Draft";
                    if (lines.Length > 2)
                    {
                        var statusLine = lines[2].Trim();
                        if (statusLine.StartsWith("Status (Draft or Publish): "))
                        {
                            status = statusLine.Substring("Status (Draft or Publish): ".Length).Trim();
                        }
                    }

                    // 最後の編集者を取得
                    var commitsUrl = $"https://api.github.com/repos/igjp-sample/AdventCalendar/commits?path={content.Path}";

                    var commits = await client.GetFromJsonAsync<List<GitHubCommit>>(commitsUrl);
                    string author = "著者不明";
                    if (commits != null && commits.Count > 0)
                    {
                        var lastCommit = commits.First();
                        author = lastCommit.Commit.Author.Name;
                    }

                    // 記事IDの生成 (x.md の x 部分を取得)
                    if (int.TryParse(content.Name.Replace(".md", ""), out int articleId))
                    {
                        articles[articleId] = new Article { Title = title, Author = author, Status = status };
                    }
                }
            }
        }
    }

    public class Article
    {
        public string? Title { get; set; }
        public string? Author { get; set; }
        public string? Status { get; set; }
    }

    public class GitHubContent
    {
        public required string Name { get; set; }
        public required string Path { get; set; }
        public required string download_url { get; set; }
    }

    public class GitHubCommit
    {
        public required CommitInfo Commit { get; set; }

        public class CommitInfo
        {
            public required AuthorInfo Author { get; set; }
        }

        public class AuthorInfo
        {
            public required string Name { get; set; }
            public required DateTime Date { get; set; }
        }
    }

}